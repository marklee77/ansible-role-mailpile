---
- name: ensure mailpile dependency packages are installed
  apt: 
    pkg: "{{ item }}" 
    state: latest 
    update_cache: yes 
    cache_valid_time: 600
  with_items:
    - gnupg
    - openssl
    - python

- name: ensure that mailpile group exists
  group:
    name: mailpile
    state: present

- name: ensure that mailpile user exits
  user:
    name: mailpile
    group: mailpile
    home: /srv/mailpile
    createhome: yes
    state: present

- name: check mailpile out of git repository
  sudo_user: git
  git:
    repo: https://github.com/pagekite/Mailpile.git
    version: "{{ mailpile_checkout_version }}"
    dest: /srv/mailpile
    update: no

#- name: update /etc/nginx/sites-available/mailpile from template
#  template:
#    src: etc/nginx/sites-available/mailpile
#    dest: /etc/nginx/sites-available/mailpile
#    owner: root
#    group: root
#    mode: 0644
#  notify:
#    - restart nginx

#- name: ensure /etc/nginx/sites-enabled/mailpile exists and links to ../sites-available/mailpile
#  file:
#    path: /etc/nginx/sites-enabled/mailpile
#    src: ../sites-available/mailpile
#    force: yes
#    state: link
#  notify:
#    - restart nginx

#- name: ensure that there is not a hostname collision with the nginx default host
#  lineinfile:
#    dest: /etc/nginx/sites-available/default
#    regexp: '^(\s+)(server_name {{ mailpile_hostname }};.*)$'
#    backrefs: yes
#    line: '\1#\2'
#    state: present
#  notify:
#    - restart nginx

#- name: ensure mailpile services are started and enabled
#  service:
#    name: "{{ item }}"
#    state: started
#    enabled: yes
#  with_items:
#    - mailpile
#    - nginx
